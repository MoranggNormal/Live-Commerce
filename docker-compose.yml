version: "3.8"

services:
  database:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - livecommerce-server
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - PGPORT=${POSTGRES_PORT}
    restart: unless-stopped
    mem_limit: 1g
    memswap_limit: 1g
    cpus: 1
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 10

  app:
    container_name: ${APP_CONTAINER_NAME}
    build:
      context: ./docker
      dockerfile: app.dockerfile
    volumes:
      - .:/app
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - APP_NAME=${APP_NAME}
      - APP_PORT=${APP_PORT}
      - APP_PUBSUB=${APP_PUBSUB}
      - APP_CLUSTER_COOKIE=${APP_CLUSTER_COOKIE}
    networks:
      - livecommerce-server
      - livecommerce-network
    restart: "on-failure"
    mem_limit: 3g
    memswap_limit: 4g
    cpus: 2
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      database:
        condition: service_healthy

networks:
  livecommerce-server:
    driver: bridge
  livecommerce-network:
    external: true

volumes:
  postgres_data:
  pgadmin_data:
